# docker-compose.yml
# Note: omit the deprecated `version:` key

services:
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    restart: unless-stopped
    ports: ["9090:9090"]
    command:
      - --config.file=/etc/prometheus/prometheus.yml
      - --enable-feature=exemplar-storage
    volumes:
    - ./configs/prometheus.yml:/etc/prometheus/prometheus.yml:ro
    - ./prom-data:/prometheus
    networks: [obs]

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    restart: unless-stopped
    ports: ["3000:3000"]
    environment:
      # change these as desired; avoids first-login prompt
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - ./grafana-data:/var/lib/grafana
      # optional: auto-provision datasources/dashboards if you add these folders
      - ./grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on: [prometheus, tempo]
    networks: [obs]

  tempo:
    image: grafana/tempo:latest
    container_name: tempo
    restart: unless-stopped
    command: ["-config.file=/etc/tempo.yaml"]
    volumes:
      - ./configs/tempo.yaml:/etc/tempo.yaml:ro
      - ./tempo-data:/var/tempo/traces
    # Only expose HTTP for Grafana; OTLP stays internal on the obs network
    ports: ["3200:3200"]
    networks: [obs]

  otel-collector:
    image: otel/opentelemetry-collector-contrib:0.135.0
    container_name: otel-collector
    restart: unless-stopped
    command: ["--config=/etc/otel-collector.yaml"]
    volumes:
      - ./configs/otel-collector.yaml:/etc/otel-collector.yaml:ro
    ports:
      - "4317:4317" # OTLP gRPC in
      - "4318:4318" # OTLP HTTP in
      - "8889:8889" # Prometheus scrape endpoint (from prometheus exporter)
    depends_on: [tempo]
    networks: [obs]

  dcgm-exporter:
    image: nvidia/dcgm-exporter:latest
    container_name: dcgm-exporter
    restart: unless-stopped
    environment:
      - DCGM_EXPORTER_LISTEN=0.0.0.0:9400
      # the next two help on some hosts; keep runtime below as well
      - NVIDIA_VISIBLE_DEVICES=all
      - NVIDIA_DRIVER_CAPABILITIES=utility,compute
    runtime: nvidia
    ports: ["9400:9400"]
    networks: [obs]

  phoenix:
    image: arizephoenix/phoenix:latest
    container_name: phoenix
    restart: unless-stopped
    ports: ["6006:6006"]
    networks: [obs]

networks:
  obs: {}

